# Production docker-compose configuration
version: '3.8'

services:
  # Backend API Service
  backend:
    build: .
    container_name: risk-platform-api-prod
    ports:
      - "8002:8002"
    environment:
      - PYTHONPATH=/app
      - API_HOST=0.0.0.0
      - API_PORT=8002
      - ENVIRONMENT=production
    volumes:
      - ./sample_data:/app/sample_data:ro
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - risk-platform

  # Frontend Streamlit Service
  frontend:
    build: .
    container_name: risk-platform-ui-prod
    ports:
      - "8501:8501"
    environment:
      - PYTHONPATH=/app
      - API_BASE_URL=http://backend:8002
      - ENVIRONMENT=production
    command: >
      streamlit run frontend/app.py 
      --server.port=8501 
      --server.address=0.0.0.0
      --server.enableCORS=false
      --server.enableXsrfProtection=false
      --server.runOnSave=false
    depends_on:
      - backend
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    restart: unless-stopped
    networks:
      - risk-platform

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: risk-platform-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    networks:
      - risk-platform

networks:
  risk-platform:
    driver: bridge
    name: risk-platform-prod-network